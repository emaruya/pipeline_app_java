- hosts: all
  become: yes
  tasks:
    - name: "Upload k8s-deploy"
      copy:
        src: "k8s-deploy"
        dest: "/root/"

    

    - name: "fazendo push no docker"
      shell: "docker tag emaruya/spring-web-youtube:latest hub.docker.com/r/emaruya/spring-web-youtube:latest"

    - name: "fazendo build no docker"
      shell: "docker push emaruya/spring-web-youtube:latest"

    
    - name: "Aplicar configmap dev"
      shell: kubectl apply -f /ansible/mysql-configmap-dev.yml

    - name: "Aplicar configmap stage"
      shell: kubectl apply -f /ansible/mysql-configmap-stage.yml

    - name: "Aplicar configmap prod"
      shell: kubectl apply -f /ansible/mysql-configmap-prod.yml

    - name: "Aplicar secret"
      shell: kubectl apply -f /ansible/mysql-secret.yml

    - name: "Aplicar mysql"
      shell: kubectl apply -f /ansible/mysql.yml

    - name: "Aplicar deployment dev"
      shell: kubectl apply -f /ansible/deployment-dev.yml

    - name: "Aplicar deployment stage"
      shell: kubectl apply -f /ansible/deployment-stage.yml

    - name: "Aplicar deployment prod"
      shell: kubectl apply -f /ansible/deployment-prod.yml

    - name: "Aplicar nodeport dev"
      shell: kubectl apply -f /ansible/nodeport-javadb-dev.yml

    - name: "Aplicar nodeport stage"
      shell: kubectl apply -f /ansible/nodeport-javadb-stage.yml

    - name: "Aplicar nodeport prod"
      shell: kubectl apply -f /ansible/nodeport-javadb-prod.yml

    - shell: "kubectl get pods | grep mysql"
      register: ps
    - debug:
        msg: " '{{ ps.stdout_lines }}' "
# ansible-playbook -i hosts provisionar.yml -u ubuntu --private-key ~/Desktop/devops/treinamentoItau
